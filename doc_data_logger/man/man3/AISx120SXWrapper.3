.TH "AISx120SXWrapper" 3 "Mon Feb 7 2022" "SupersonicTestRocket Logger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AISx120SXWrapper
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBSensor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAISx120SXWrapper\fP (uint8_t CS_, bandwidth bandwidthX, bandwidth bandwidthY, bool x_offset_monitor, bool x_offset_canc, bool y_offset_monitor, bool y_offset_canc)"
.br
.ti -1c
.RI "bool \fBsetup\fP (uint32_t attempts, uint32_t delayDuration)"
.br
.ti -1c
.RI "const char * \fBmyName\fP ()"
.br
.ti -1c
.RI "uint8_t \fBgetSensorQty\fP ()"
.br
.ti -1c
.RI "bool \fBisDue\fP (uint32_t currMicros, volatile bool &triggeredDR)"
.br
.ti -1c
.RI "bool \fBisMeasurementInvalid\fP ()"
.br
.ti -1c
.RI "\fBAISx120SXPacket\fP * \fBgetPacket\fP (uint32_t currMicros)"
.br
.ti -1c
.RI "\fBPacketHeader\fP \fBgetHeader\fP (uint32_t currMicros)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Function Documentation"
.PP 
.SS "\fBPacketHeader\fP AISx120SXWrapper::getHeader (uint32_t currMicros)\fC [virtual]\fP"

.PP
Implements \fBSensor\fP\&.
.SS "\fBAISx120SXPacket\fP * AISx120SXWrapper::getPacket (uint32_t currMicros)\fC [virtual]\fP"

.PP
Implements \fBSensor\fP\&.
.SS "bool AISx120SXWrapper::isDue (uint32_t currMicros, volatile bool & triggeredDR)\fC [virtual]\fP"

.PP
Implements \fBSensor\fP\&.
.SS "bool AISx120SXWrapper::isMeasurementInvalid ()\fC [virtual]\fP"

.PP
Reimplemented from \fBSensor\fP\&.
.SS "const char * AISx120SXWrapper::myName ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBSensor\fP\&.
.SS "bool AISx120SXWrapper::setup (uint32_t attempts, uint32_t delayDuration)\fC [virtual]\fP"

.PP
Implements \fBSensor\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SupersonicTestRocket Logger from the source code\&.
